# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.55.0"

default_platform :ios

platform :ios do
  desc "Increments the version number for a new patch version"
  lane :increment_version_patch do
    new_version_number = increment_version_number(
      bump_type: "patch",
    )
    revert_tvOS_changes()
    commit_version_bump(
      message: "New version #{new_version_number}"
    )
  end

  desc "Increments the version number for a new minor version"
  lane :increment_version_minor do
    new_version_number = increment_version_number(
      bump_type: "minor",
    )
    revert_tvOS_changes()
    commit_version_bump(
      message: "New version #{new_version_number}"
    )
  end

  desc "Increments the version number for a new major version"
  lane :increment_version_major do
    new_version_number = increment_version_number(
      bump_type: "major",
    )
    revert_tvOS_changes()
    commit_version_bump(
      message: "New version #{new_version_number}"
    )
  end

  desc "Determines the commit for a given build number"
  desc "- pass build number via 'build_number:xxx'"
  lane :determine_commit do |options|
    if options[:build_number]
      build_components = options[:build_number].split(".")
      if build_components.length == 1
        commit_count = build_components[0].to_i
        branch_name = "master"
      elsif build_components.length == 2
        commit_count_master = build_components[0].to_i
        commit_count_dev_diff = build_components[1].to_i
        commit_count = commit_count_master + commit_count_dev_diff
        branch_name = "dev"
      elsif build_components.length == 3
        UI.user_error! "Detected feature branch build. Only builds from `master` or `dev` are supported."
      else
        UI.user_error! "Supplied malformed build number"
      end

      puts "Branch: #{branch_name}"
      puts "Commit count: #{commit_count}"

      error_callback = proc do |error|
        UI.user_error! "Branch `#{branch_name}` does not exist."
      end
      sh("git rev-parse --verify #{branch_name}", error_callback: error_callback)

      total_commit_count = sh("git rev-list #{branch_name} | wc -l | sed 's/^ *//;s/ *$//'").to_i
      puts "Total commit count on #{branch_name}: #{total_commit_count}"

      commit_count_diff = total_commit_count - commit_count
      puts "Commit count difference: #{commit_count_diff}"

      if commit_count_diff < 0
        UI.user_error! "Supplied refers to a commit which is to far ahead"
      end

      commit_id = sh("git rev-parse --short head~#{commit_count_diff}").strip!
      commit_title = sh("git log #{commit_id} --pretty=format:'%s' --max-count=1")
      commit_author = sh("git log #{commit_id} --pretty=format:'%an' --max-count=1")

      UI.header "Found commit for build_number #{options[:build_number]}"
      UI.success "Branch: #{branch_name}"
      UI.success "Commit id: #{commit_id}"
      UI.success "Commit title: #{commit_title}"
      UI.success "Commit author: #{commit_author}"
    else
      UI.user_error! "No build number supplied (use `fastlane determine_commit build_number:xxx`)"
    end
  end

  desc "Checks application for potential App Store violations"
  desc "- requires app environment via '--env'"
  lane :precheck_app do
    precheck(
      app_identifier: ENV["BUNDLE_ID"],
    )
  end

  private_lane :revert_tvOS_changes do
    sh "git checkout head -- ../xikolo-tvos/Info.plist"
  end

  desc "Adds localizations for the application incrementally"
  desc "- uses bartycrouch"
  desc "- translates storyboard files and NSLocalizedString usages"
  lane :localize do
    sh "../Pods/BartyCrouch/bartycrouch interfaces -p ../xikolo-ios/"
    sh "../Pods/BartyCrouch/bartycrouch code -p ../xikolo-common/ -l ../xikolo-common/ -s -c -e"
    sh "../Pods/BartyCrouch/bartycrouch code -p ../xikolo-ios/ -l ../xikolo-ios/ -s -c -e"
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded.
# Learn more at https://github.com/fastlane/fastlane#metrics
